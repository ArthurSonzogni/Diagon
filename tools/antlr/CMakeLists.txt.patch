97,123d96
< # Compiler-specific C++11 activation.
< if ("${CMAKE_CXX_COMPILER_ID}" MATCHES "GNU" OR "${CMAKE_CXX_COMPILER_ID}" MATCHES "Intel")
<     execute_process(
<         COMMAND ${CMAKE_CXX_COMPILER} -dumpversion OUTPUT_VARIABLE GCC_VERSION)
<     # Just g++-5.0 and greater contain <codecvt> header. (test in ubuntu)
<     if (NOT (GCC_VERSION VERSION_GREATER 5.0 OR GCC_VERSION VERSION_EQUAL 5.0))
<         message(FATAL_ERROR "${PROJECT_NAME} requires g++ 5.0 or greater.")
<     endif ()
< elseif ("${CMAKE_CXX_COMPILER_ID}" MATCHES "Clang" AND APPLE)
<     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -stdlib=libc++")
< elseif ("${CMAKE_CXX_COMPILER_ID}" MATCHES "Clang" AND CMAKE_SYSTEM_NAME MATCHES "Linux")
<     execute_process(
<         COMMAND ${CMAKE_CXX_COMPILER} -dumpversion OUTPUT_VARIABLE CLANG_VERSION)
<     if (NOT (CLANG_VERSION VERSION_GREATER 4.2.1 OR CLANG_VERSION VERSION_EQUAL 4.2.1))
<         message(FATAL_ERROR "${PROJECT_NAME} requires clang 4.2.1 or greater.")
<     endif ()
<     # You can use libc++ to compile this project when g++ is NOT greater than or equal to 5.0.
<     if (WITH_LIBCXX)
<         set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -stdlib=libc++")
<     endif()
< elseif ( MSVC_VERSION GREATER 1800 OR MSVC_VERSION EQUAL 1800 )
<   # Visual Studio 2012+ supports c++11 features 
< else ()
<     message(FATAL_ERROR "Your C++ compiler does not support C++11.")
< endif ()
< 
< 
