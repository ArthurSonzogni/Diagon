name: Build and run tests

on:
  - push
  - pull_request

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          #- name: "Windows Latest - MSVC"
            #os: windows-latest
            #cc: "cl"
            #cxx: "cl"
          - name: "Ubuntu Latest - GCC"
            os: ubuntu-latest
            cc: "gcc-9"
            cxx: "g++-9"
            cmake: "cmake"

          - name: "Ubuntu Latest - Clang"
            os: ubuntu-latest
            cc: "clang-9"
            cxx: "clang++-9"
            cmake: "cmake"

          - name: "Ubuntu Latest - Emscripten"
            os: ubuntu-latest
            cc: "emcc"
            cxx: "em++"
            cmake: "emcmake cmake"
    steps:
      - uses: actions/checkout@v2
      - uses: seanmiddleditch/gha-setup-ninja@master

      - name: Set Windows ENV
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install boost for windows
        if: runner.os == 'Windows'
        uses: MarkusJx/install-boost@v1.0.1
        with:
          boost_version: 1.73.0

      - name: Setup Emscripten
        if: ${{ matrix.config.cc  == 'emcc' }}
        uses: mymindstorm/setup-emsdk@v7

      - name: Install Linux Dependencies
        if: runner.os == 'Linux'
        run:  sudo apt install libboost-graph-dev

      - name: Build
        run: >
          mkdir build;
          ${{ matrix.config.cmakeÂ }}
          -DCMAKE_BUILD_TYPE=Debug
          -DCMAKE_C_COMPILER=${{ matrix.config.cc }}
          -DCMAKE_CXX_COMPILER=${{ matrix.config.cxx }};
          make -j

      - name: tests
        if: ${{ matrix.config.cc  != 'emcc' }}
        run: >
          ./input_output_test

      - name: tests
        if: ${{ matrix.config.cc  != 'emcc' }}
        run: >
          ./input_output_test

      - name: tests
        if: ${{ matrix.config.cc  == 'emcc' }}
        run: >
          mkdir distribution
          cp diagon.js distribution/
          cp diagon.wasm distribution/
          cp diagon.wasm distribution/
          cp index.html distribution/
          cp index.html distribution/
